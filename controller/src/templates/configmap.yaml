kind: ConfigMap
apiVersion: v1
metadata:
  name: {name}
data:
  proxy-rules.yaml:
    http:
      routers:
        proxy:
          entryPoints:
            - http
          rule: PathPrefix(`/`)
          middlewares:
            - oidcPlugin
            - customAuthorization
            - cookieCleaner
          service: notebook

      middlewares:
        oidcPlugin:
          forwardAuth:
            address: 'http://localhost:4180/'
            trustForwardHeader: true
            authResponseHeaders:
              - X-Auth-Request-Access-Token
              - Authorization
              - X-Auth-Request-User
              - X-Auth-Request-Groups
              - X-Auth-Request-Email
              - X-Auth-Request-Preferred-Username
        customAuthorization:
          forwardAuth:
            address: 'http://localhost:3000'
        cookieCleaner:
          forwardAuth:
            address: 'http://localhost:3001'
            authResponseHeaders:
              - Cookie

      services:
        notebook:
          loadBalancer:
            method: drr
            passHostHeader: false
            servers:
              - url: 'http://localhost:8888/'
                weight: 1

  # Note: We expose the oidc plucgin through traefik in order
  # to keep the ingress object simple. In principle traffic
  # to /oauth2 could go from the ingress directly to the oidc
  # plugin.

  oidc-plugin-rules.yaml:
    http:
      routers:
        oidcPlugin:
          entryPoints:
            - http
          rule: PathPrefix(`{path}/oauth2/`)
          middlewares:
            - stripPath
            - authHeaders
          service: oidcPlugin

      middlewares:
        stripPath:
          stripPrefix:
            prefixes:
              - "{path}"

        authHeaders:
          headers:
            browserXssFilter: true
            contentTypeNosniff: true
            forceSTSHeader: true
            sslHost: '{host}'
            stsIncludeSubdomains: true
            stsPreload: true
            frameDeny: true

      services:
        oidcPlugin:
          loadBalancer:
            method: drr
            servers:
              - url: 'http://localhost:4180/'
                weight: 1

  traefik.yaml:
    log:
      level: debug
    api:
      dashboard: false
    providers:
      file:
        directory: /config
    entryPoints:
      http:
        address: ':8000'
    accessLog:
      bufferingSize: 10
