{% extends "base/statefulset.yaml" %}

{% block volumes %}
        - name: cookie-secret
          secret:
            secretName: {{ name }}
            items:
              - key: cookieSecret
                path: cookie_secret
        - name: etc-rstudio-logging
          configMap:
            name: {{ name }}
            items:
              - key: logging.conf
                path: logging.conf
        - name: etc-rstudio-rserver
          configMap:
            name: {{ name }}
            items:
              - key: rserver.conf
                path: rserver.conf
        - name: etc-rstudio-rsession
          configMap:
            name: {{ name }}
            items:
              - key: rsession.conf
                path: rsession.conf
        - name: rstudio-db-config
          configMap:
            name: {{ name }}
            items:
              - key: db_config
                path: db_config
{% endblock %}

{% block containers %}
        - name: jupyter-server
          image: {{ jupyter_server["image"] }}
          workingDir: {{ jupyter_server["rootDir"] }}
          volumeMounts:
            - name: workspace
              mountPath: {{ storage["pvc"]["mountPath"] }}
            - name: cookie-secret
              mountPath: /etc/rstudio/cookie_secret
              subPath: cookie_secret
              readOnly: true
            - name: etc-rstudio-logging
              mountPath: /etc/rstudio/logging.conf
              subPath: logging.conf
              readOnly: true
            - name: etc-rstudio-rserver
              mountPath: /etc/rstudio/rserver.conf
              subPath: rserver.conf
              readOnly: true
            - name: etc-rstudio-rsession
              mountPath: /etc/rstudio/rsession.conf
              subPath: rsession.conf
              readOnly: true
            - name: rstudio-db-config
              mountPath: {{ storage["pvc"]["mountPath"] | pathjoin("db_config") }}
              subPath: db_config
              readOnly: true
          resources: {{ jupyter_server["resources"] | default({}) | tojson }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 100
            fsGroup: 100
            allowPrivilegeEscalation: false

          # We allow quite some time (5 + 1 minutes) for the jupyter container to come up in
          # case the entrypoint contains a lot of code which has to be executed before the
          # Jupyter server can even accept connections. However, really long running tasks
          # should be put into an init container.
          livenessProbe:
            httpGet:
              path: {{ path | pathjoin("images/favicon.ico") }}
              port: 4181
              {% if basic_auth["enabled"] and not oidc["enabled"] %}
              httpHeaders:
                - name: Authorization
                  value: {{ "Basic " ~ ((basic_auth["username"] ~ ":" ~ basic_auth["password"]) | b64encode) }}
              {% endif %}
            periodSeconds: 10
            failureThreshold: 6
            timeoutSeconds: 9
          readinessProbe:
            httpGet:
              path: {{ path | pathjoin("images/favicon.ico") }}
              port: 4181
              {% if basic_auth["enabled"] and not oidc["enabled"] %}
              httpHeaders:
                - name: Authorization
                  value: {{ "Basic " ~ ((basic_auth["username"] ~ ":" ~ basic_auth["password"]) | b64encode) }}
              {% endif %}
            periodSeconds: 10
            failureThreshold: 2
            timeoutSeconds: 9
          startupProbe:
            httpGet:
              path: {{ path | pathjoin("images/favicon.ico") }}
              port: 4181
              {% if basic_auth["enabled"] and not oidc["enabled"] %}
              httpHeaders:
                - name: Authorization
                  value: {{ "Basic " ~ ((basic_auth["username"] ~ ":" ~ basic_auth["password"]) | b64encode) }}
              {% endif %}
            periodSeconds: 10
            failureThreshold: 30
            timeoutSeconds: 9
{% endblock %}
