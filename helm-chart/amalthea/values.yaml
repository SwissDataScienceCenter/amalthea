# Default values for the jupyter-server-operator chart
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Indicate the scope which this operator watches for
# JupyterServer resources.
scope:
  # It is recommended to limit the scope of Amalthea to some
  # explicitly mentioned namespaces for two reasons:
  # 1. Amalthea needs pretty extensive permissions on the namespace
  #    in which it operates.
  # 2. Cluster-wide network policies do not yet exist in Kubernetes.
  #    Therefore, no network policies are automatically added for
  #    cluster-wide deployments and admins will need to set up appropriate
  #    network policies manually.
  clusterWide: false
  # Namespaces should not be provided if clusterWide is true.
  # If the deployment is not clusterwide, then there are two options: 
  # 1. Specify the namespaces where amalthea should operate
  # 2. Do not define namespaces at all, in which case amalthea
  #    will only operate in the namespace where the helm chart is deployed.
  # namespaces: ["default"]

deployCrd: true # whether to deploy the jupyterserver CRD

networkPolicies:
  controller:
    # # Deny all ingress to the amalthea controller - there is no need for anything
    # # to have acess to the controller.
    denyAllIngress: true
  jupyterServers:
    # # Note that until cluster-wide network policies are available in
    # # Kubernetes (https://github.com/kubernetes/enhancements/issues/2091),
    # # enabling network policies for the sessions won't do anything if the scope of the
    # # operator is set to clusterWide.
    ingress:
      # # The ingress network policy can be used to prevent ingress into the jupyter server
      # # from everywhere except the pods and namespaces captured by the selectors below. For
      # # example you can use this to allow ingress into the sessions only from a specific
      # # kubernetes ingress resource - i.e. only nginx ignress controller pods can access the sessions.
      enabled: false
      # allowIngressOnlyFrom:
      #   namespaceSelectorLabels: {}
      #   podSelectorLabels: {}
    egress:
      # # If enabled allows jupyter servers to access ports 80 and 443 (http/https) 
      # # outside of the cluster and port 53 for DNS outside and inside of the cluster
      # # all other egress is prohibited.
      enabled: true

rescheduleOnNodeFailure: false

# Configure the kopf operator settings by providing
# a yaml object as multiline string. See
# https://kopf.readthedocs.io/en/stable/configuration/
# for configuraiton options.
kopfOperatorSettings: |
  watching:
    # This can fix a problem of a watch stream suddenly falling
    # silent, see https://github.com/nolar/kopf/issues/762#issuecomment-838423267
    client_timeout: 600

# If the operator should be able to create and watch child resources other than
# [statefulset, persistentvolumeclaims, services, ingresses, secrets, configmaps]
# which are necessary for Amalthea to work, add the corresponding API groups and
# resources here as an array of name/group objects, eg:
extraChildResources: []
  # - name: jupyterservers
  #   group: amalthea.dev

image:
  repository: renku/amalthea
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.0.1-rc1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Specify API group, version and custom resource names. You will very
# likely never want to change any of this! This is mostly useful for
# dev purposes as it allows multiple otherwise incompatible versions of
# the CRD to co-exist in one cluster.
crdApiGroup: renku.io
crdApiVersion: v1alpha1
crdNames:
  kind: JupyterServer
  plural: jupyterservers
  singular: jupyterserver
  shortNames:
    - js
