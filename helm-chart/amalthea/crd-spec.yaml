spec:
  description: User defined specification for a JupyterServer custom resource.
  properties:
    auth:
      default: {}
      description: Settings defining access control to the jupyter server.
      properties:
        oidc:
          default: {}
          description: >-
            Configuration for an OpenID connect provider to be used for access
            control to the jupyter server. Useful information can be found in
            the oauth2 proxy docs:
            https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/overview/
          properties:
            authorizedEmails:
              default: []
              description:
                List of users (identified by Email address read from the "email"
                OIDC claim) which are allowed to access this Jupyter session.
                This list is stored as a file and passed to the
                `--authenticated-emails-file` option (see
                https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/overview#command-line-options).
              items:
                type: string
              type: array
            authorizedGroups:
              default: []
              description:
                List of groups of users (read from the "groups" OIDC claim)
                which are allowed to access this Jupyter session. This list
                passed to the `--allowed-group` option (see
                https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/overview#command-line-options).
              items:
                type: string
              type: array
            clientId:
              description:
                "The client id of the application registered with the OIDC
                provider, see `--client-id` here:
                https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/overview/#command-line-options"
              type: string
            clientSecret:
              description: >-
                The client secret of the application registered with the OIDC
                provider. This secret can be given here explicitly as string or
                through a reference to an existing secret. Using the secret
                reference is the preferred option because it avoids storing the
                secret in cleartext on the custom resource specification. See
                `--client-secret` here:
                https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/overview/#command-line-options
              oneOf:
                - required:
                    - value
                - required:
                    - secretKeyRef
              properties:
                secretKeyRef:
                  description:
                    A regular reference to the key/secret which holds the client
                    secret of the application registered with the OIDC provider.
                    Note that the secret has to be in the same namespace in
                    which the custom resource object is going to be created.
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                  type: object
                value:
                  description: The secret provided as a string value.
                  type: string
              type: object
            enabled:
              default: false
              type: boolean
            issuerUrl:
              description: >-
                Issuer URL of the OIDC provider, see `--oidc-issuer-url` here:
                https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/overview/#command-line-options
              type: string
          type: object
        basicAuth:
          default: {}
          description: Enable basic authentication for the session.
          type: object
          properties:
            enabled: 
              type: boolean
              default: false
            username:
              type: string
            password:
              type: string
      type: object
    culling:
      default: {}
      description: Options about culling idle servers
      properties:
        maxAgeSecondsThreshold:
          default: 0
          description:
            The maximum allowed age for a session, regardless of whether it
            is active or not. A value of zero indicates that the server cannot be
            culled due to its age.
          minimum: 0
          type: integer
        idleSecondsThreshold:
          default: 0
          description:
            How long should a server be idle for before it is culled. A value of
            zero indicates that the server should never be culled for inactivity.
          minimum: 0
          type: integer
        idleProbe:
          type: object
          default: {}
          description: 
            If idle culling is enabled this probe is used to determine if the
            session is idle or not.
          properties:
            httpGet:
              description:
                Based on the status code from the GET request the session is considered
                idle or not. A "successful" status code (i.e. >=200 or <400) indicates that the session is idle.
              type: object
              default: {}
              properties:
                host:
                  type: string
                  description: 
                    Defaults to the IP address of the pod that runs the session
                    that is checked for idleness.
                path: 
                  type: string
                  default: /
                scheme:
                  enum:
                    - http
                    - https
                  type: string
                  default: http
                port:
                  type: number
                  minimum: 1
                  maximum: 65535
                  description: 
                    If undefined then no port is used in the request and the port actually used
                    depends on the scheme.
                httpHeaders:
                  type: array
                  default: []
                  items:
                    type: object
                    parameters:
                      name:
                        type: string
                      value:
                        type: string
      type: object
    jupyterServer:
      default: {}
      description:
        Configuration options (such as image to run) for the Jupyter server. See
        also
        https://jupyter-server.readthedocs.io/en/latest/other/full-config.html
      properties:
        defaultUrl:
          default: /lab
          description:
            The default URL to redirect to from '/'. Frequently used values are
            '/lab' or '/rstudio'. Translates to `--ServerApp.default_url`.
          type: string
        image:
          default: jupyter/minimal-notebook:latest
          type: string
        resources:
          default: {}
          description:
            Regular K8s resource requests, will be set on the main notebook
            container.
          type: object
          x-kubernetes-preserve-unknown-fields: true
        rootDir:
          default: /home/jovyan/work
          description:
            The absolute path to the root/notebook directory for the jupyter
            server. Should lead to a subdirectory of or match the path at
            storage.pvc.mountPath. Translates to `--ServerApp.root_dir`.
          type: string
      type: object
    patches:
      default: []
      description:
        Patches to be applied to the created child resources after template
        rendering. Currently json patches and json merge patches are supported.
      items:
        properties:
          patch:
            x-kubernetes-preserve-unknown-fields: true
          type:
            enum:
              - application/json-patch+json
              - application/merge-patch+json
            type: string
        type: object
      type: array
    routing:
      default: {}
      description:
        Settings related to how the jupyter server will be exposed outside of
        the cluster.
      properties:
        host:
          description:
            Host under which the server will be available (eg
            myserver.example.com), should not include the schema.
          type: string
        ingressAnnotations:
          default: {}
          type: object
          x-kubernetes-preserve-unknown-fields: true
        path:
          default: /
          description: Optionally make the server available under some path.
          type: string
        tls:
          default: {}
          description: Settings for defining TLS termination by the ingress.
          properties:
            enabled:
              default: false
              type: boolean
            secretName:
              description:
                The name of the K8s TLS secret. Might be pre-existing in the
                cluster or created under that name by a tool like cert manager
                when needed.
              type: string
          type: object
      type: object
    storage:
      default: {}
      description: Settings to define storage to back the jupyter server.
      properties:
        pvc:
          default: {}
          properties:
            enabled:
              default: false
              description:
                Wether a PVC should be used to back the session. Defaults to
                'false' in which case an emptyDir volume will be used.
              type: boolean
            mountPath:
              default: /home/jovyan/work
              description:
                The absolute path to the location where the PVC should be
                mounted in the user session pod.
              type: string
            storageClassName:
              description:
                Storage class to be used for the PVC. If left empty, the default
                storage class defined for the cluster will be used.
              type: string
          type: object
        size:
          default: 100Mi
          description:
            Size of the PVC or sizeLimit of the emptyDir volume which backs the
            session respectively.
          x-kubernetes-int-or-string: true
      type: object
    
    type:             
      type: string
      enum: 
        - base
        - jupyterlab
        - rstudio
      default: jupyterlab
      description: "The type of template (jupyterlab, rstudio, base) to be used for the session."
  type: object
