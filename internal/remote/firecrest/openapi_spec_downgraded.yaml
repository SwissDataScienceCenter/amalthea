components:
    schemas:
        ApResponseErrorType:
            enum:
                - error
                - validation
            title: ApResponseErrorType
            type: string
        ApiResponseError:
            properties:
                data:
                    additionalProperties: true
                    nullable: true
                    title: Data
                    type: object
                errorType:
                    $ref: '#/components/schemas/ApResponseErrorType'
                    default: error
                message:
                    title: Message
                    type: string
                user:
                    nullable: true
                    title: User
                    type: string
            required:
                - message
            title: ApiResponseError
            type: object
        Body_post_upload_filesystem__system_name__ops_upload_post:
            properties:
                file:
                    description: File to be uploaded as `multipart/form-data`
                    format: binary
                    title: File
                    type: string
            required:
                - file
            title: Body_post_upload_filesystem__system_name__ops_upload_post
            type: object
        BucketLifecycleConfiguration:
            description: Configuration for automatic object lifecycle in storage buckets.
            properties:
                days:
                    default: 10
                    description: Number of days after which objects will expire automatically.
                    title: Days
                    type: integer
            title: BucketLifecycleConfiguration
            type: object
        CompressRequest:
            examples:
                - account: group
                  dereference: "true"
                  match_pattern: '*./[ab].*\.txt'
                  path: /home/user/dir
                  target_path: /home/user/file.tar.gz
            properties:
                account:
                    description: Name of the account in the scheduler
                    nullable: true
                    title: Account
                    type: string
                dereference:
                    default: false
                    description: If set to `true`, it follows symbolic links and archive the files they point to instead of the links themselves.
                    nullable: true
                    title: Dereference
                    type: boolean
                matchPattern:
                    description: Regex pattern to filter files to compress
                    nullable: true
                    title: Matchpattern
                    type: string
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
                targetPath:
                    description: Target path of the compress operation
                    title: Targetpath
                    type: string
            required:
                - sourcePath
                - targetPath
            title: CompressRequest
            type: object
        CompressResponse:
            properties:
                transferJob:
                    $ref: '#/components/schemas/TransferJob'
            required:
                - transferJob
            title: CompressResponse
            type: object
        ContentUnit:
            enum:
                - lines
                - bytes
            title: ContentUnit
            type: string
        CopyRequest:
            examples:
                - account: group
                  dereference: "true"
                  source_path: /home/user/dir/file.orig
                  target_path: /home/user/dir/file.new
            properties:
                account:
                    description: Name of the account in the scheduler
                    nullable: true
                    title: Account
                    type: string
                dereference:
                    default: false
                    description: If set to `true`, it follows symbolic links and copies the files they point to instead of the links themselves.
                    nullable: true
                    title: Dereference
                    type: boolean
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
                targetPath:
                    description: Target path of the copy operation
                    title: Targetpath
                    type: string
            required:
                - sourcePath
                - targetPath
            title: CopyRequest
            type: object
        CopyResponse:
            properties:
                transferJob:
                    $ref: '#/components/schemas/TransferJob'
            required:
                - transferJob
            title: CopyResponse
            type: object
        DataOperation:
            properties:
                data_transfer:
                    $ref: '#/components/schemas/S3DataTransfer'
                    description: Data transfer service configuration
                    nullable: true
                max_ops_file_size:
                    default: 5242880
                    description: Maximum file size (in bytes) allowed for direct upload and download. Larger files will go through the staging area.
                    title: Max Ops File Size
                    type: integer
            title: DataOperation
            type: object
        DataTransferType:
            description: Types of data transfer services
            enum:
                - s3
            title: DataTransferType
            type: string
        DeleteResponse:
            properties:
                transferJob:
                    $ref: '#/components/schemas/TransferJob'
            required:
                - transferJob
            title: DeleteResponse
            type: object
        DownloadFileResponse:
            properties:
                completeUploadUrl:
                    nullable: true
                    title: Completeuploadurl
                    type: string
                downloadUrl:
                    nullable: true
                    title: Downloadurl
                    type: string
                maxPartSize:
                    nullable: true
                    title: Maxpartsize
                    type: integer
                partsUploadUrls:
                    items:
                        type: string
                    nullable: true
                    title: Partsuploadurls
                    type: array
                transferJob:
                    $ref: '#/components/schemas/TransferJob'
            required:
                - transferJob
            title: DownloadFileResponse
            type: object
        ExtractRequest:
            examples:
                - account: group
                  source_path: /home/user/dir/file.tar.gz
                  target_path: /home/user/dir
            properties:
                account:
                    description: Name of the account in the scheduler
                    nullable: true
                    title: Account
                    type: string
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
                targetPath:
                    description: Path to the directory where to extract the compressed file
                    title: Targetpath
                    type: string
            required:
                - sourcePath
                - targetPath
            title: ExtractRequest
            type: object
        ExtractResponse:
            properties:
                transferJob:
                    $ref: '#/components/schemas/TransferJob'
            required:
                - transferJob
            title: ExtractResponse
            type: object
        File:
            properties:
                group:
                    title: Group
                    type: string
                lastModified:
                    title: Lastmodified
                    type: string
                linkTarget:
                    nullable: true
                    title: Linktarget
                    type: string
                name:
                    title: Name
                    type: string
                permissions:
                    title: Permissions
                    type: string
                size:
                    title: Size
                    type: string
                type:
                    title: Type
                    type: string
                user:
                    title: User
                    type: string
            required:
                - name
                - type
                - linkTarget
                - user
                - group
                - permissions
                - lastModified
                - size
            title: File
            type: object
        FileChecksum:
            properties:
                algorithm:
                    default: SHA-256
                    title: Algorithm
                    type: string
                checksum:
                    title: Checksum
                    type: string
            required:
                - checksum
            title: FileChecksum
            type: object
        FileContent:
            properties:
                content:
                    title: Content
                    type: string
                contentType:
                    $ref: '#/components/schemas/ContentUnit'
                endPosition:
                    title: Endposition
                    type: integer
                startPosition:
                    title: Startposition
                    type: integer
            required:
                - content
                - contentType
                - startPosition
                - endPosition
            title: FileContent
            type: object
        FileStat:
            properties:
                atime:
                    title: Atime
                    type: integer
                ctime:
                    title: Ctime
                    type: integer
                dev:
                    title: Dev
                    type: integer
                gid:
                    title: Gid
                    type: integer
                ino:
                    title: Ino
                    type: integer
                mode:
                    title: Mode
                    type: integer
                mtime:
                    title: Mtime
                    type: integer
                nlink:
                    title: Nlink
                    type: integer
                size:
                    title: Size
                    type: integer
                uid:
                    title: Uid
                    type: integer
            required:
                - mode
                - ino
                - dev
                - nlink
                - uid
                - gid
                - size
                - atime
                - ctime
                - mtime
            title: FileStat
            type: object
        FileSystem:
            description: Defines a cluster file system and its type.
            properties:
                dataType:
                    $ref: '#/components/schemas/FileSystemDataType'
                    description: File system purpose/type.
                defaultWorkDir:
                    default: false
                    description: Mark this as the default working directory.
                    title: Defaultworkdir
                    type: boolean
                path:
                    description: Mount path for the file system.
                    title: Path
                    type: string
            required:
                - path
                - dataType
            title: FileSystem
            type: object
        FileSystemDataType:
            description: Data types for cluster file systems.
            enum:
                - users
                - store
                - archive
                - apps
                - scratch
                - project
            title: FileSystemDataType
            type: string
        FilesystemServiceHealth:
            description: Health check for a mounted file system.
            properties:
                healthy:
                    default: false
                    description: True if the service is healthy.
                    nullable: true
                    title: Healthy
                    type: boolean
                lastChecked:
                    description: Timestamp of the last health check.
                    format: date-time
                    nullable: true
                    title: Lastchecked
                    type: string
                latency:
                    description: Service response latency in seconds.
                    nullable: true
                    title: Latency
                    type: number
                message:
                    description: Optional status message.
                    nullable: true
                    title: Message
                    type: string
                path:
                    description: Path of the monitored file system.
                    nullable: true
                    title: Path
                    type: string
                serviceType:
                    $ref: '#/components/schemas/HealthCheckType'
                    description: Type of the service being checked.
            required:
                - serviceType
            title: FilesystemServiceHealth
            type: object
        GetDirectoryLsResponse:
            properties:
                output:
                    items:
                        $ref: '#/components/schemas/File'
                    nullable: true
                    title: Output
                    type: array
            required:
                - output
            title: GetDirectoryLsResponse
            type: object
        GetFileChecksumResponse:
            properties:
                output:
                    $ref: '#/components/schemas/FileChecksum'
                    nullable: true
            required:
                - output
            title: GetFileChecksumResponse
            type: object
        GetFileHeadResponse:
            properties:
                output:
                    $ref: '#/components/schemas/FileContent'
                    nullable: true
            required:
                - output
            title: GetFileHeadResponse
            type: object
        GetFileStatResponse:
            properties:
                output:
                    $ref: '#/components/schemas/FileStat'
                    nullable: true
            required:
                - output
            title: GetFileStatResponse
            type: object
        GetFileTailResponse:
            properties:
                output:
                    $ref: '#/components/schemas/FileContent'
                    nullable: true
            required:
                - output
            title: GetFileTailResponse
            type: object
        GetFileTypeResponse:
            properties:
                output:
                    example: directory
                    nullable: true
                    title: Output
                    type: string
            required:
                - output
            title: GetFileTypeResponse
            type: object
        GetJobMetadataResponse:
            properties:
                jobs:
                    items:
                        $ref: '#/components/schemas/JobMetadataModel'
                    nullable: true
                    title: Jobs
                    type: array
            title: GetJobMetadataResponse
            type: object
        GetJobResponse:
            properties:
                jobs:
                    items:
                        $ref: '#/components/schemas/JobModel'
                    nullable: true
                    title: Jobs
                    type: array
            title: GetJobResponse
            type: object
        GetLiveness:
            properties:
                healthcheckRuns:
                    additionalProperties:
                        format: date-time
                        type: string
                    title: Healthcheckruns
                    type: object
                lastUpdate:
                    title: Lastupdate
                    type: integer
            title: GetLiveness
            type: object
        GetNodesResponse:
            properties:
                nodes:
                    items:
                        $ref: '#/components/schemas/NodeModel'
                    title: Nodes
                    type: array
            required:
                - nodes
            title: GetNodesResponse
            type: object
        GetPartitionsResponse:
            properties:
                partitions:
                    items:
                        $ref: '#/components/schemas/PartitionModel'
                    title: Partitions
                    type: array
            required:
                - partitions
            title: GetPartitionsResponse
            type: object
        GetReservationsResponse:
            properties:
                reservations:
                    items:
                        $ref: '#/components/schemas/ReservationModel'
                    title: Reservations
                    type: array
            required:
                - reservations
            title: GetReservationsResponse
            type: object
        GetSystemsResponse:
            properties:
                dataOperation:
                    $ref: '#/components/schemas/DataOperation'
                    nullable: true
                systems:
                    items:
                        $ref: '#/components/schemas/HPCCluster'
                    title: Systems
                    type: array
            required:
                - systems
            title: GetSystemsResponse
            type: object
        GetViewFileResponse:
            properties:
                output:
                    nullable: true
                    title: Output
                    type: string
            required:
                - output
            title: GetViewFileResponse
            type: object
        HPCCluster:
            description: |-
                Definition of an HPC cluster, including SSH access, scheduling, and
                filesystem layout. More info in
                [the systems' section](../arch/systems//README.md).
            properties:
                datatransferJobsDirectives:
                    description: Custom scheduler flags passed to data transfer jobs (e.g. `-pxfer` for a dedicated partition).
                    items:
                        type: string
                    title: Datatransferjobsdirectives
                    type: array
                fileSystems:
                    description: List of mounted file systems on the cluster, such as scratch or home directories.
                    items:
                        $ref: '#/components/schemas/FileSystem'
                    title: Filesystems
                    type: array
                name:
                    description: Unique name for the cluster.
                    title: Name
                    type: string
                probing:
                    $ref: '#/components/schemas/Probing'
                    description: Probing configuration for monitoring the cluster.
                scheduler:
                    $ref: '#/components/schemas/Scheduler'
                    description: Job scheduler configuration.
                servicesHealth:
                    description: Optional health information for different services in the cluster.
                    items:
                        anyOf:
                            - $ref: '#/components/schemas/SchedulerServiceHealth'
                            - $ref: '#/components/schemas/FilesystemServiceHealth'
                            - $ref: '#/components/schemas/SSHServiceHealth'
                            - $ref: '#/components/schemas/HealthCheckException'
                    nullable: true
                    title: Serviceshealth
                    type: array
                ssh:
                    $ref: '#/components/schemas/SSHClientPool'
                    description: SSH configuration for accessing the cluster nodes.
            required:
                - name
                - ssh
                - scheduler
                - probing
            title: HPCCluster
            type: object
        HealthCheckException:
            description: Generic health check error placeholder.
            properties:
                healthy:
                    default: false
                    description: True if the service is healthy.
                    nullable: true
                    title: Healthy
                    type: boolean
                lastChecked:
                    description: Timestamp of the last health check.
                    format: date-time
                    nullable: true
                    title: Lastchecked
                    type: string
                latency:
                    description: Service response latency in seconds.
                    nullable: true
                    title: Latency
                    type: number
                message:
                    description: Optional status message.
                    nullable: true
                    title: Message
                    type: string
                serviceType:
                    $ref: '#/components/schemas/HealthCheckType'
                    description: Type of the service being checked.
            required:
                - serviceType
            title: HealthCheckException
            type: object
        HealthCheckType:
            description: Types of services that can be health-checked.
            enum:
                - scheduler
                - filesystem
                - ssh
                - s3
                - exception
            title: HealthCheckType
            type: string
        JobDescriptionModel:
            properties:
                account:
                    description: Charge job resources to specified account
                    nullable: true
                    title: Account
                    type: string
                constraints:
                    description: Job constraints
                    nullable: true
                    title: Constraints
                    type: string
                env:
                    anyOf:
                        - additionalProperties:
                            type: string
                          nullable: true
                          type: object
                        - items:
                            type: string
                          nullable: true
                          type: array
                    default:
                        F7T_version: v2.0.0
                    description: Dictionary of environment variables to set in the job context
                    title: Env
                name:
                    description: Name for the job
                    nullable: true
                    title: Name
                    type: string
                script:
                    description: Script for the job
                    title: Script
                    type: string
                scriptPath:
                    description: Path to the job in target system
                    title: Scriptpath
                    type: string
                standardError:
                    description: Standard error file name
                    nullable: true
                    title: Standarderror
                    type: string
                standardInput:
                    description: Standard input file name
                    nullable: true
                    title: Standardinput
                    type: string
                standardOutput:
                    description: Standard output file name
                    nullable: true
                    title: Standardoutput
                    type: string
                working_directory:
                    description: Job working directory
                    title: Working Directory
                    type: string
            required:
                - working_directory
            title: JobDescriptionModel
            type: object
        JobMetadataModel:
            properties:
                jobId:
                    title: Jobid
                    type: integer
                script:
                    nullable: true
                    title: Script
                    type: string
                standardError:
                    nullable: true
                    title: Standarderror
                    type: string
                standardInput:
                    nullable: true
                    title: Standardinput
                    type: string
                standardOutput:
                    nullable: true
                    title: Standardoutput
                    type: string
            required:
                - jobId
            title: JobMetadataModel
            type: object
        JobModel:
            properties:
                account:
                    nullable: true
                    title: Account
                    type: string
                allocationNodes:
                    title: Allocationnodes
                    type: integer
                cluster:
                    title: Cluster
                    type: string
                group:
                    nullable: true
                    title: Group
                    type: string
                jobId:
                    title: Jobid
                    type: integer
                killRequestUser:
                    nullable: true
                    title: Killrequestuser
                    type: string
                name:
                    title: Name
                    type: string
                nodes:
                    title: Nodes
                    type: string
                partition:
                    title: Partition
                    type: string
                priority:
                    nullable: true
                    title: Priority
                    type: integer
                status:
                    $ref: '#/components/schemas/JobStatus'
                tasks:
                    items:
                        $ref: '#/components/schemas/JobTask'
                    nullable: true
                    title: Tasks
                    type: array
                time:
                    $ref: '#/components/schemas/JobTime'
                user:
                    nullable: true
                    title: User
                    type: string
                workingDirectory:
                    title: Workingdirectory
                    type: string
            required:
                - jobId
                - name
                - status
                - time
                - allocationNodes
                - cluster
                - nodes
                - partition
                - user
                - workingDirectory
            title: JobModel
            type: object
        JobStatus:
            properties:
                exitCode:
                    nullable: true
                    title: Exitcode
                    type: integer
                interruptSignal:
                    nullable: true
                    title: Interruptsignal
                    type: integer
                state:
                    title: State
                    type: string
                stateReason:
                    nullable: true
                    title: Statereason
                    type: string
            required:
                - state
            title: JobStatus
            type: object
        JobTask:
            properties:
                id:
                    title: Id
                    type: string
                name:
                    title: Name
                    type: string
                status:
                    $ref: '#/components/schemas/JobStatus'
                time:
                    $ref: '#/components/schemas/JobTime'
            required:
                - id
                - name
                - status
                - time
            title: JobTask
            type: object
        JobTime:
            properties:
                elapsed:
                    nullable: true
                    title: Elapsed
                    type: integer
                end:
                    nullable: true
                    title: End
                    type: integer
                limit:
                    nullable: true
                    title: Limit
                    type: integer
                start:
                    nullable: true
                    title: Start
                    type: integer
                suspended:
                    nullable: true
                    title: Suspended
                    type: integer
            title: JobTime
            type: object
        MoveRequest:
            examples:
                - account: group
                  source_path: /home/user/dir/file.orig
                  target_path: /home/user/dir/file.new
            properties:
                account:
                    description: Name of the account in the scheduler
                    nullable: true
                    title: Account
                    type: string
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
                targetPath:
                    description: Target path of the move operation
                    title: Targetpath
                    type: string
            required:
                - sourcePath
                - targetPath
            title: MoveRequest
            type: object
        MoveResponse:
            properties:
                transferJob:
                    $ref: '#/components/schemas/TransferJob'
            required:
                - transferJob
            title: MoveResponse
            type: object
        MultipartUpload:
            description: Configuration for multipart upload behavior.
            properties:
                max_part_size:
                    default: 2147483648
                    description: Maximum size (in bytes) for multipart data transfers. Default is 2 GB.
                    title: Max Part Size
                    type: integer
                parallel_runs:
                    default: 3
                    description: Number of parts to upload in parallel to the staging area.
                    title: Parallel Runs
                    type: integer
                tmp_folder:
                    default: tmp
                    description: Temporary folder used for storing split parts during upload.
                    title: Tmp Folder
                    type: string
                use_split:
                    default: false
                    description: Enable or disable splitting large files into parts when uploading the file to the staging area.
                    title: Use Split
                    type: boolean
            title: MultipartUpload
            type: object
        NodeModel:
            properties:
                address:
                    nullable: true
                    title: Address
                    type: string
                allocCpus:
                    nullable: true
                    title: Alloccpus
                    type: integer
                allocMemory:
                    nullable: true
                    title: Allocmemory
                    type: integer
                cores:
                    nullable: true
                    title: Cores
                    type: integer
                cpuLoad:
                    nullable: true
                    title: Cpuload
                    type: number
                cpus:
                    title: Cpus
                    type: integer
                features:
                    anyOf:
                        - nullable: true
                          type: string
                        - items:
                            type: string
                          nullable: true
                          type: array
                    title: Features
                freeMemory:
                    nullable: true
                    title: Freememory
                    type: integer
                hostname:
                    nullable: true
                    title: Hostname
                    type: string
                idleCpus:
                    nullable: true
                    title: Idlecpus
                    type: integer
                name:
                    title: Name
                    type: string
                partitions:
                    items:
                        type: string
                    nullable: true
                    title: Partitions
                    type: array
                sockets:
                    nullable: true
                    title: Sockets
                    type: integer
                state:
                    anyOf:
                        - type: string
                        - items:
                            type: string
                          type: array
                    title: State
                threads:
                    nullable: true
                    title: Threads
                    type: integer
                weight:
                    nullable: true
                    title: Weight
                    type: integer
            required:
                - cpus
                - name
                - state
            title: NodeModel
            type: object
        PartitionModel:
            properties:
                cpus:
                    nullable: true
                    title: Cpus
                    type: integer
                name:
                    title: Name
                    type: string
                partition:
                    anyOf:
                        - type: string
                        - items:
                            type: string
                          type: array
                    title: Partition
                totalNodes:
                    nullable: true
                    title: Totalnodes
                    type: integer
            required:
                - name
                - partition
            title: PartitionModel
            type: object
        PosixIdentified:
            properties:
                id:
                    title: Id
                    type: string
                name:
                    title: Name
                    type: string
            required:
                - id
                - name
            title: PosixIdentified
            type: object
        PostCompressRequest:
            examples:
                - dereference: "true"
                  match_pattern: '*./[ab].*\.txt'
                  path: /home/user/dir
                  target_path: /home/user/file.tar.gz
            properties:
                dereference:
                    default: false
                    description: If set to `true`, it follows symbolic links and archive the files they point to instead of the links themselves.
                    nullable: true
                    title: Dereference
                    type: boolean
                matchPattern:
                    description: Regex pattern to filter files to compress
                    nullable: true
                    title: Matchpattern
                    type: string
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
                targetPath:
                    description: Path to the compressed file
                    title: Targetpath
                    type: string
            required:
                - sourcePath
                - targetPath
            title: PostCompressRequest
            type: object
        PostExtractRequest:
            examples:
                - path: /home/user/dir/file.tar.gz
                  target_path: /home/user/dir
            properties:
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
                targetPath:
                    description: Path to the directory where to extract the compressed file
                    title: Targetpath
                    type: string
            required:
                - sourcePath
                - targetPath
            title: PostExtractRequest
            type: object
        PostFileDownloadRequest:
            examples:
                - account: group
                  path: /home/user/dir/file
            properties:
                account:
                    description: Name of the account in the scheduler
                    nullable: true
                    title: Account
                    type: string
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
            required:
                - sourcePath
            title: PostFileDownloadRequest
            type: object
        PostFileSymlinkRequest:
            examples:
                - link_path: /home/user/newlink
                  path: /home/user/dir
            properties:
                linkPath:
                    description: Path to the new symlink
                    title: Linkpath
                    type: string
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
            required:
                - sourcePath
                - linkPath
            title: PostFileSymlinkRequest
            type: object
        PostFileSymlinkResponse:
            properties:
                output:
                    $ref: '#/components/schemas/File'
                    nullable: true
            required:
                - output
            title: PostFileSymlinkResponse
            type: object
        PostFileUploadRequest:
            examples:
                - account: group
                  file_name: /path/local/file
                  file_size: "7340032"
                  path: /home/user/dir/file
            properties:
                account:
                    description: Name of the account in the scheduler
                    nullable: true
                    title: Account
                    type: string
                fileName:
                    description: Name of the local file to upload
                    title: Filename
                    type: string
                fileSize:
                    description: Size of the file to upload in bytes
                    title: Filesize
                    type: integer
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
            required:
                - sourcePath
                - fileName
                - fileSize
            title: PostFileUploadRequest
            type: object
        PostJobAttachRequest:
            examples:
                - command: echo 'Attached with success' > $HOME/attach.out
            properties:
                command:
                    description: Command to attach to the job
                    title: Command
                    type: string
            title: PostJobAttachRequest
            type: object
        PostJobSubmissionResponse:
            properties:
                jobId:
                    nullable: true
                    title: Jobid
                    type: integer
            title: PostJobSubmissionResponse
            type: object
        PostJobSubmitRequest:
            examples:
                - job:
                    account: myproject
                    env:
                        LD_LIBRARY_PATH: /path/to/library
                        PATH: /path/to/bin
                    name: Example with inline script
                    script: |-
                        #!/bin/bash
                        --partition=part01
                        for i in {1..100}
                        do
                        echo $i
                        sleep 1
                        done
                    standard_error: count_to_100.err
                    standard_input: /dev/null
                    standard_output: count_to_100.out
                    working_directory: '{{home_path}}'
                - job:
                    account: myproject
                    env:
                        LD_LIBRARY_PATH: /path/to/library
                        PATH: /path/to/bin
                    name: Example with script path
                    script_path: /path/to/batch_file.sh
                    standard_error: count_to_100.err
                    standard_input: /dev/null
                    standard_output: count_to_100.out
                    working_directory: '{{home_path}}'
            properties:
                job:
                    $ref: '#/components/schemas/JobDescriptionModel'
            required:
                - job
            title: PostJobSubmitRequest
            type: object
        PostMakeDirRequest:
            examples:
                - parent: "true"
                  path: /home/user/dir/newdir
            properties:
                parent:
                    default: false
                    description: If set to `true` creates all its parent directories if they do not already exist
                    nullable: true
                    title: Parent
                    type: boolean
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
            required:
                - sourcePath
            title: PostMakeDirRequest
            type: object
        PostMkdirResponse:
            properties:
                output:
                    $ref: '#/components/schemas/File'
                    nullable: true
            required:
                - output
            title: PostMkdirResponse
            type: object
        Probing:
            description: Cluster monitoring attributes.
            properties:
                interval:
                    description: Interval in seconds between cluster checks.
                    title: Interval
                    type: integer
                timeout:
                    description: Maximum time in seconds allowed per check.
                    title: Timeout
                    type: integer
            required:
                - interval
                - timeout
            title: Probing
            type: object
        PutFileChmodRequest:
            examples:
                - mode: "777"
                  path: /home/user/dir/file.out
            properties:
                mode:
                    description: Mode in octal permission format
                    title: Mode
                    type: string
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
            required:
                - sourcePath
                - mode
            title: PutFileChmodRequest
            type: object
        PutFileChmodResponse:
            properties:
                output:
                    $ref: '#/components/schemas/File'
                    nullable: true
            required:
                - output
            title: PutFileChmodResponse
            type: object
        PutFileChownRequest:
            examples:
                - group: my-group
                  owner: user
                  path: /home/user/dir/file.out
            properties:
                group:
                    default: ""
                    description: Group name of the new group owner of the file
                    nullable: true
                    title: Group
                    type: string
                owner:
                    default: ""
                    description: User name of the new user owner of the file
                    nullable: true
                    title: Owner
                    type: string
                sourcePath:
                    example: /home/user/dir
                    nullable: true
                    title: Sourcepath
                    type: string
            required:
                - sourcePath
            title: PutFileChownRequest
            type: object
        PutFileChownResponse:
            properties:
                output:
                    $ref: '#/components/schemas/File'
                    nullable: true
            required:
                - output
            title: PutFileChownResponse
            type: object
        ReservationModel:
            properties:
                endTime:
                    title: Endtime
                    type: integer
                features:
                    nullable: true
                    title: Features
                    type: string
                name:
                    title: Name
                    type: string
                nodeList:
                    title: Nodelist
                    type: string
                startTime:
                    title: Starttime
                    type: integer
            required:
                - name
                - nodeList
                - endTime
                - startTime
            title: ReservationModel
            type: object
        S3DataTransfer:
            description: Object storage configuration, including credentials, endpoints, and upload behavior.
            properties:
                accessKeyId:
                    description: Access key ID for S3-compatible storage.
                    format: password
                    title: Accesskeyid
                    type: string
                    writeOnly: true
                bucketLifecycleConfiguration:
                    $ref: '#/components/schemas/BucketLifecycleConfiguration'
                    description: Lifecycle policy settings for auto-deleting files after a given number of days.
                multipart:
                    $ref: '#/components/schemas/MultipartUpload'
                    description: Settings for multipart upload, including chunk size and concurrency.
                name:
                    description: Name identifier for the storage.
                    title: Name
                    type: string
                privateUrl:
                    description: Private/internal endpoint URL for the storage.
                    format: password
                    title: Privateurl
                    type: string
                    writeOnly: true
                probing:
                    $ref: '#/components/schemas/Probing'
                    description: Configuration for probing storage availability.
                    nullable: true
                publicUrl:
                    description: Public/external URL for the storage.
                    title: Publicurl
                    type: string
                region:
                    description: Region of the storage bucket.
                    title: Region
                    type: string
                secretAccessKey:
                    description: Secret access key for storage. You can give directly the content or the file path using `'secret_file:/path/to/file'`.
                    format: password
                    title: Secretaccesskey
                    type: string
                    writeOnly: true
                serviceType:
                    $ref: '#/components/schemas/DataTransferType'
                    description: Type of data transfer service.
                servicesHealth:
                    description: Optional health information for different services in the cluster.
                    items:
                        anyOf:
                            - $ref: '#/components/schemas/S3ServiceHealth'
                            - $ref: '#/components/schemas/HealthCheckException'
                    nullable: true
                    title: Serviceshealth
                    type: array
                tenant:
                    description: Optional tenant identifier for multi-tenant setups.
                    nullable: true
                    title: Tenant
                    type: string
                ttl:
                    description: Time-to-live (in seconds) for generated URLs.
                    title: Ttl
                    type: integer
            required:
                - serviceType
                - name
                - privateUrl
                - publicUrl
                - accessKeyId
                - secretAccessKey
                - region
                - ttl
            title: S3DataTransfer
            type: object
        S3ServiceHealth:
            description: Health status of S3-compatible storage.
            properties:
                healthy:
                    default: false
                    description: True if the service is healthy.
                    nullable: true
                    title: Healthy
                    type: boolean
                lastChecked:
                    description: Timestamp of the last health check.
                    format: date-time
                    nullable: true
                    title: Lastchecked
                    type: string
                latency:
                    description: Service response latency in seconds.
                    nullable: true
                    title: Latency
                    type: number
                message:
                    description: Optional status message.
                    nullable: true
                    title: Message
                    type: string
                serviceType:
                    $ref: '#/components/schemas/HealthCheckType'
                    description: Type of the service being checked.
            required:
                - serviceType
            title: S3ServiceHealth
            type: object
        SSHClientPool:
            description: SSH connection pool configuration for remote execution.
            properties:
                host:
                    description: SSH target hostname.
                    title: Host
                    type: string
                maxClients:
                    default: 100
                    description: Maximum number of concurrent SSH clients.
                    title: Maxclients
                    type: integer
                port:
                    description: SSH port.
                    title: Port
                    type: integer
                proxyHost:
                    description: Optional proxy host for tunneling.
                    nullable: true
                    title: Proxyhost
                    type: string
                proxyPort:
                    description: Optional proxy port.
                    nullable: true
                    title: Proxyport
                    type: integer
                timeout:
                    $ref: '#/components/schemas/SSHTimeouts'
                    description: SSH timeout settings.
            required:
                - host
                - port
            title: SSHClientPool
            type: object
        SSHServiceHealth:
            description: Health status of SSH service.
            properties:
                healthy:
                    default: false
                    description: True if the service is healthy.
                    nullable: true
                    title: Healthy
                    type: boolean
                lastChecked:
                    description: Timestamp of the last health check.
                    format: date-time
                    nullable: true
                    title: Lastchecked
                    type: string
                latency:
                    description: Service response latency in seconds.
                    nullable: true
                    title: Latency
                    type: number
                message:
                    description: Optional status message.
                    nullable: true
                    title: Message
                    type: string
                serviceType:
                    $ref: '#/components/schemas/HealthCheckType'
                    description: Type of the service being checked.
            required:
                - serviceType
            title: SSHServiceHealth
            type: object
        SSHTimeouts:
            description: Various SSH settings.
            properties:
                commandExecution:
                    default: 5
                    description: Timeout (seconds) for executing commands over SSH.
                    title: Commandexecution
                    type: integer
                connection:
                    default: 5
                    description: Timeout (seconds) for initial SSH connection.
                    title: Connection
                    type: integer
                idleTimeout:
                    default: 60
                    description: Max idle time (seconds) before disconnecting.
                    title: Idletimeout
                    type: integer
                keepAlive:
                    default: 5
                    description: Interval (seconds) for sending keep-alive messages.
                    title: Keepalive
                    type: integer
                login:
                    default: 5
                    description: Timeout (seconds) for SSH login/auth.
                    title: Login
                    type: integer
            title: SSHTimeouts
            type: object
        Scheduler:
            description: Cluster job scheduler configuration.
            properties:
                apiUrl:
                    description: REST API endpoint for scheduler.
                    nullable: true
                    title: Apiurl
                    type: string
                apiVersion:
                    description: Scheduler API version.
                    nullable: true
                    title: Apiversion
                    type: string
                timeout:
                    default: 10
                    description: Timeout in seconds for scheduler communication with the API.
                    nullable: true
                    title: Timeout
                    type: integer
                type:
                    $ref: '#/components/schemas/SchedulerType'
                    description: Scheduler type.
                version:
                    description: Scheduler version.
                    title: Version
                    type: string
            required:
                - type
                - version
            title: Scheduler
            type: object
        SchedulerServiceHealth:
            description: Health check result for the job scheduler.
            properties:
                healthy:
                    default: false
                    description: True if the service is healthy.
                    nullable: true
                    title: Healthy
                    type: boolean
                lastChecked:
                    description: Timestamp of the last health check.
                    format: date-time
                    nullable: true
                    title: Lastchecked
                    type: string
                latency:
                    description: Service response latency in seconds.
                    nullable: true
                    title: Latency
                    type: number
                message:
                    description: Optional status message.
                    nullable: true
                    title: Message
                    type: string
                serviceType:
                    $ref: '#/components/schemas/HealthCheckType'
                    description: Type of the service being checked.
            required:
                - serviceType
            title: SchedulerServiceHealth
            type: object
        SchedulerType:
            description: Supported job scheduler types.
            enum:
                - slurm
                - pbs
            title: SchedulerType
            type: string
        TransferJob:
            properties:
                jobId:
                    title: Jobid
                    type: integer
                logs:
                    $ref: '#/components/schemas/TransferJobLogs'
                system:
                    title: System
                    type: string
                workingDirectory:
                    title: Workingdirectory
                    type: string
            required:
                - jobId
                - system
                - workingDirectory
                - logs
            title: TransferJob
            type: object
        TransferJobLogs:
            properties:
                errorLog:
                    title: Errorlog
                    type: string
                outputLog:
                    title: Outputlog
                    type: string
            required:
                - outputLog
                - errorLog
            title: TransferJobLogs
            type: object
        UploadFileResponse:
            properties:
                completeUploadUrl:
                    nullable: true
                    title: Completeuploadurl
                    type: string
                downloadUrl:
                    nullable: true
                    title: Downloadurl
                    type: string
                maxPartSize:
                    nullable: true
                    title: Maxpartsize
                    type: integer
                partsUploadUrls:
                    items:
                        type: string
                    nullable: true
                    title: Partsuploadurls
                    type: array
                transferJob:
                    $ref: '#/components/schemas/TransferJob'
            required:
                - transferJob
            title: UploadFileResponse
            type: object
        UserInfoResponse:
            properties:
                group:
                    $ref: '#/components/schemas/PosixIdentified'
                groups:
                    items:
                        $ref: '#/components/schemas/PosixIdentified'
                    title: Groups
                    type: array
                user:
                    $ref: '#/components/schemas/PosixIdentified'
            required:
                - user
                - group
                - groups
            title: UserInfoResponse
            type: object
    securitySchemes:
        APIAuthDependency:
            flows:
                clientCredentials:
                    scopes: {}
                    tokenUrl: http://keycloak:8080/auth/realms/kcrealm/protocol/openid-connect/token
            type: oauth2
        HTTPBearer:
            scheme: bearer
            type: http
info:
    title: FirecREST
    version: 2.3.1
openapi: 3.1.0
paths:
    /compute/{system_name}/jobs:
        get:
            description: Get status of all jobs
            operationId: get_jobs_compute__system_name__jobs_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: If set to `true` returns all jobs visible by the current user, otherwise only the current user owned jobs
                  in: query
                  name: allusers
                  required: false
                  schema:
                    default: false
                    description: If set to `true` returns all jobs visible by the current user, otherwise only the current user owned jobs
                    title: Allusers
                    type: boolean
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetJobResponse'
                    description: Jobs status returned successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get Jobs
            tags:
                - compute
        post:
            description: Submit a new job
            operationId: post_job_submit_compute__system_name__jobs_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostJobSubmitRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostJobSubmissionResponse'
                    description: Job submitted correctly
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Post Job Submit
            tags:
                - compute
    /compute/{system_name}/jobs/{job_id}:
        delete:
            description: Cancel a job
            operationId: delete_job_cancel_compute__system_name__jobs__job_id__delete
            parameters:
                - description: Job id
                  in: path
                  name: job_id
                  required: true
                  schema:
                    description: Job id
                    pattern: ^[a-zA-Z0-9]+$
                    title: Job Id
                    type: string
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "204":
                    description: Job cancelled successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Delete Job Cancel
            tags:
                - compute
        get:
            description: Get status of a job by `{job_id}`
            operationId: get_job_compute__system_name__jobs__job_id__get
            parameters:
                - description: Job id
                  in: path
                  name: job_id
                  required: true
                  schema:
                    description: Job id
                    pattern: ^[a-zA-Z0-9]+$
                    title: Job Id
                    type: string
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetJobResponse'
                    description: Jobs status returned successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get Job
            tags:
                - compute
    /compute/{system_name}/jobs/{job_id}/attach:
        put:
            description: Attach a procces to a job by `{job_id}`
            operationId: attach_compute__system_name__jobs__job_id__attach_put
            parameters:
                - description: Job id
                  in: path
                  name: job_id
                  required: true
                  schema:
                    description: Job id
                    pattern: ^[a-zA-Z0-9]+$
                    title: Job Id
                    type: string
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostJobAttachRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "204":
                    description: Process attached succesfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Attach
            tags:
                - compute
    /compute/{system_name}/jobs/{job_id}/metadata:
        get:
            description: Get metadata of a job by `{job_id}`
            operationId: get_job_metadata_compute__system_name__jobs__job_id__metadata_get
            parameters:
                - description: Job id
                  in: path
                  name: job_id
                  required: true
                  schema:
                    description: Job id
                    pattern: ^[a-zA-Z0-9]+$
                    title: Job Id
                    type: string
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetJobMetadataResponse'
                    description: Jobs metadata returned successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get Job Metadata
            tags:
                - compute
    /filesystem/{system_name}/ops/checksum:
        get:
            description: Output the checksum of a file (using SHA-256 algotithm)
            operationId: get_checksum_filesystem__system_name__ops_checksum_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: Target system
                  in: query
                  name: path
                  required: true
                  schema:
                    description: Target system
                    title: Path
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFileChecksumResponse'
                    description: Checksum returned successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get Checksum
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/chmod:
        put:
            description: Change the permission mode of a file(`chmod`)
            operationId: put_chmod_filesystem__system_name__ops_chmod_put
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutFileChmodRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutFileChmodResponse'
                    description: File permissions changed successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Put Chmod
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/chown:
        put:
            description: Change the ownership of a given file (`chown`)
            operationId: put_chown_filesystem__system_name__ops_chown_put
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutFileChownRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutFileChownResponse'
                    description: File ownership changed successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Put Chown
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/compress:
        post:
            description: Compress files and directories using `tar` command
            operationId: post_compress_filesystem__system_name__ops_compress_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostCompressRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "204":
                    description: File and/or directories compressed successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Post Compress
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/download:
        get:
            description: Download a small file (max 5242880 Bytes)
            operationId: get_download_filesystem__system_name__ops_download_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: A file to download
                  in: query
                  name: path
                  required: true
                  schema:
                    description: A file to download
                    title: Path
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema: {}
                    description: File downloaded successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get Download
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/extract:
        post:
            description: Extract `tar` `gzip` archives
            operationId: post_extract_filesystem__system_name__ops_extract_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostExtractRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "204":
                    description: File extracted successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Post Extract
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/file:
        get:
            description: Output the type of a file or directory
            operationId: get_file_filesystem__system_name__ops_file_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: A file or folder path
                  in: query
                  name: path
                  required: true
                  schema:
                    description: A file or folder path
                    title: Path
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFileTypeResponse'
                    description: Type returned successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get File
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/head:
        get:
            description: Output the first part of file/s (`head`)
            operationId: get_head_filesystem__system_name__ops_head_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: File path
                  in: query
                  name: path
                  required: true
                  schema:
                    description: File path
                    title: Path
                    type: string
                - description: The output will be the first NUM bytes of each file.
                  in: query
                  name: bytes
                  required: false
                  schema:
                    description: The output will be the first NUM bytes of each file.
                    nullable: true
                    title: Bytes
                    type: integer
                - description: The output will be the first NUM lines of each file.
                  in: query
                  name: lines
                  required: false
                  schema:
                    description: The output will be the first NUM lines of each file.
                    nullable: true
                    title: Lines
                    type: integer
                - description: The output will be the whole file, without the last NUM bytes/lines of each file. NUM should be specified in the respective argument through `bytes` or `lines`.
                  in: query
                  name: skipTrailing
                  required: false
                  schema:
                    default: false
                    description: The output will be the whole file, without the last NUM bytes/lines of each file. NUM should be specified in the respective argument through `bytes` or `lines`.
                    title: Skiptrailing
                    type: boolean
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFileHeadResponse'
                    description: Head operation finished successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get Head
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/ls:
        get:
            description: List the contents of the given directory (`ls`)
            operationId: get_ls_filesystem__system_name__ops_ls_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: The path to list
                  in: query
                  name: path
                  required: true
                  schema:
                    description: The path to list
                    title: Path
                    type: string
                - description: Show hidden files
                  in: query
                  name: showHidden
                  required: false
                  schema:
                    default: false
                    description: Show hidden files
                    title: Showhidden
                    type: boolean
                - description: List numeric user and group IDs
                  in: query
                  name: numericUid
                  required: false
                  schema:
                    default: false
                    description: List numeric user and group IDs
                    title: Numericuid
                    type: boolean
                - description: Recursively list files and folders
                  in: query
                  name: recursive
                  required: false
                  schema:
                    default: false
                    description: Recursively list files and folders
                    title: Recursive
                    type: boolean
                - description: Show information for the file the link references.
                  in: query
                  name: dereference
                  required: false
                  schema:
                    default: false
                    description: Show information for the file the link references.
                    title: Dereference
                    type: boolean
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDirectoryLsResponse'
                    description: Directory listed successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get Ls
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/mkdir:
        post:
            description: Create directory operation (`mkdir`)
            operationId: post_mkdir_filesystem__system_name__ops_mkdir_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostMakeDirRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostMkdirResponse'
                    description: Directory created successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Post Mkdir
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/rm:
        delete:
            description: Delete file or directory operation (`rm`)
            operationId: delete_rm_filesystem__system_name__ops_rm_delete
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: The path to delete
                  in: query
                  name: path
                  required: true
                  schema:
                    description: The path to delete
                    title: Path
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "204":
                    description: File or directory deleted successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Delete Rm
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/stat:
        get:
            description: Output the `stat` of a file
            operationId: get_stat_filesystem__system_name__ops_stat_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: A file or folder path
                  in: query
                  name: path
                  required: true
                  schema:
                    description: A file or folder path
                    title: Path
                    type: string
                - description: Follow symbolic links
                  in: query
                  name: dereference
                  required: false
                  schema:
                    default: false
                    description: Follow symbolic links
                    title: Dereference
                    type: boolean
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFileStatResponse'
                    description: Stat returned successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get Stat
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/symlink:
        post:
            description: Create symlink operation (`ln`)
            operationId: post_symlink_filesystem__system_name__ops_symlink_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostFileSymlinkRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostFileSymlinkResponse'
                    description: Symlink created successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Post Symlink
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/tail:
        get:
            description: Output the last part of a file (`tail`)
            operationId: get_tail_filesystem__system_name__ops_tail_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: File path
                  in: query
                  name: path
                  required: true
                  schema:
                    description: File path
                    title: Path
                    type: string
                - description: The output will be the last NUM bytes of each file.
                  in: query
                  name: bytes
                  required: false
                  schema:
                    description: The output will be the last NUM bytes of each file.
                    nullable: true
                    title: Bytes
                    type: integer
                - description: The output will be the last NUM lines of each file.
                  in: query
                  name: lines
                  required: false
                  schema:
                    description: The output will be the last NUM lines of each file.
                    nullable: true
                    title: Lines
                    type: integer
                - description: The output will be the whole file, without the first NUM bytes/lines of each file. NUM should be specified in the respective argument through `bytes` or `lines`.
                  in: query
                  name: skipHeading
                  required: false
                  schema:
                    default: false
                    description: The output will be the whole file, without the first NUM bytes/lines of each file. NUM should be specified in the respective argument through `bytes` or `lines`.
                    title: Skipheading
                    type: boolean
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFileTailResponse'
                    description: '`tail` operation finished successfully'
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get Tail
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/upload:
        post:
            description: Upload a small file (max 5242880 Bytes)
            operationId: post_upload_filesystem__system_name__ops_upload_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: Specify path where file should be uploaded.
                  in: query
                  name: path
                  required: true
                  schema:
                    description: Specify path where file should be uploaded.
                    title: Path
                    type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/Body_post_upload_filesystem__system_name__ops_upload_post'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "204":
                    description: File uploaded successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Post Upload
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/ops/view:
        get:
            description: View file content (up to max 5242880 bytes)
            operationId: get_view_filesystem__system_name__ops_view_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: File path
                  in: query
                  name: path
                  required: true
                  schema:
                    description: File path
                    title: Path
                    type: string
                - description: Value, in bytes, of the size of data to be retrieved from the file.
                  in: query
                  name: size
                  required: false
                  schema:
                    default: 5242880
                    description: Value, in bytes, of the size of data to be retrieved from the file.
                    nullable: true
                    title: Size
                    type: integer
                - description: Value in bytes of the offset.
                  in: query
                  name: offset
                  required: false
                  schema:
                    default: 0
                    description: Value in bytes of the offset.
                    nullable: true
                    title: Offset
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetViewFileResponse'
                    description: View operation finished successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get View
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/transfer/compress:
        post:
            description: Create compress file or directory operation (`tar`) (for files larger than 5242880 Bytes)
            operationId: compress_filesystem__system_name__transfer_compress_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CompressRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CompressResponse'
                    description: Compress file or directory operation created successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Compress
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/transfer/cp:
        post:
            description: Create copy file or directory operation (`cp`) (for files larger than 5242880 Bytes)
            operationId: post_cp_filesystem__system_name__transfer_cp_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CopyRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CopyResponse'
                    description: Copy file or directory operation created successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Post Cp
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/transfer/download:
        post:
            description: Create asynchronous download operation (for files larger than 5242880 Bytes)
            operationId: post_download_filesystem__system_name__transfer_download_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostFileDownloadRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DownloadFileResponse'
                    description: Download operation created successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Post Download
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/transfer/extract:
        post:
            description: Create extract file operation (`tar`) (for files larger than 5242880 Bytes)
            operationId: extract_filesystem__system_name__transfer_extract_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ExtractRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExtractResponse'
                    description: Extract file or directory operation created successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Extract
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/transfer/mv:
        post:
            description: Create move file or directory operation (`mv`) (for files larger than 5242880 Bytes)
            operationId: move_mv_filesystem__system_name__transfer_mv_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MoveRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MoveResponse'
                    description: Move file or directory operation created successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Move Mv
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/transfer/rm:
        delete:
            description: Create remove file or directory operation (`rm`) (for files larger than 5242880 Bytes)
            operationId: delete_rm_filesystem__system_name__transfer_rm_delete
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
                - description: The path to delete
                  in: query
                  name: path
                  required: true
                  schema:
                    description: The path to delete
                    title: Path
                    type: string
                - in: query
                  name: account
                  required: false
                  schema:
                    nullable: true
                    title: Account
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteResponse'
                    description: Remove file or directory operation created successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Delete Rm
            tags:
                - filesystem
                - filesystem
    /filesystem/{system_name}/transfer/upload:
        post:
            description: Create asynchronous upload operation (for files larger than 5242880 Bytes)
            operationId: post_upload_filesystem__system_name__transfer_upload_post
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostFileUploadRequest'
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UploadFileResponse'
                    description: Upload operation created successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Post Upload
            tags:
                - filesystem
                - filesystem
    /status/{system_name}/nodes:
        get:
            description: Get the list of nodes of a `{system_name}`
            operationId: get_system_nodes_status__system_name__nodes_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetNodesResponse'
                    description: Nodes list returned successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get System Nodes
            tags:
                - status
    /status/{system_name}/partitions:
        get:
            description: Get the list of partitions of a `{system_name}`
            operationId: get_system_partitions_status__system_name__partitions_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPartitionsResponse'
                    description: Partitions list returned successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get System Partitions
            tags:
                - status
    /status/{system_name}/reservations:
        get:
            description: Get the list of reservations of a `{system_name}`
            operationId: get_system_reservations_status__system_name__reservations_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetReservationsResponse'
                    description: Reservations list returned successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get System Reservations
            tags:
                - status
    /status/{system_name}/userinfo:
        get:
            description: Get current user information on a `{system_name}`
            operationId: get_userinfo_status__system_name__userinfo_get
            parameters:
                - in: path
                  name: system_name
                  required: true
                  schema:
                    title: System Name
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfoResponse'
                    description: User information returned successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get Userinfo
            tags:
                - status
    /status/liveness/:
        get:
            description: Get liveness status of FirecREST
            operationId: get_liveness_status_liveness__get
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLiveness'
                    description: Liveness status returned successfully
            summary: Get Liveness
            tags:
                - status
    /status/systems:
        get:
            description: Get the list of systems and health status
            operationId: get_systems_status_systems_get
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponseError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSystemsResponse'
                    description: System list returned successfully
            security:
                - APIAuthDependency: []
                - HTTPBearer: []
            summary: Get Systems
            tags:
                - status
