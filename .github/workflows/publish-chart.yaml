name: publish-chart

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

jobs:
  publish-chart:
    runs-on: ubuntu-24.04
    if: "startsWith(github.ref, 'refs/tags/')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: azure/setup-helm@v4.2.0
      - name: Publish chart and push images
        id: publish-chart
        env:
          DOCKER_USERNAME: ${{ secrets.RENKU_DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.RENKU_DOCKER_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.RENKUBOT_GITHUB_TOKEN }}
        run: |
          cd helm-chart/
          python -m pip install --upgrade pip
          pip install chartpress
          git config --global user.email "renku@datascience.ch"
          git config --global user.name "Renku Bot"
          echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
          export TAG=$(echo ${GITHUB_REF} | cut -d/ -f3)
          helm dep update amalthea
          helm dep update amalthea-sessions
          helm lint amalthea
          helm lint amalthea-sessions
          cd ..
          export PLATFORM_ARGS="--platform linux/amd64 --platform linux/arm64 --builder docker-buildx"
          chartpress --tag $TAG $PLATFORM_ARGS
          chartpress --tag $TAG --push --publish-chart $PLATFORM_ARGS
          chartpress --tag latest --push $PLATFORM_ARGS
          echo "amalthea-sessions-image=renku/amalthea-sessions:$TAG" >> $GITHUB_OUTPUT
          echo "amalthea-sidecars-image=renku/sidecars:$TAG" >> $GITHUB_OUTPUT
      - name: Scan amalthea-sessions image
        uses: snyk/actions/docker@master
        continue-on-error: true
        with:
          image: ${{ steps.publish-chart.outputs.amalthea-sessions-image}}
          args: --file=./Dockerfile --severity-threshold=high --sarif-file-output=as.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: List files
        run: |
          pwd
          ls -la
      - name: Upload Snyk report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: as.sarif
          category: snyk_amalthea-sessions
      - name: Scan sidecars image
        uses: snyk/actions/docker@master
        continue-on-error: true
        with:
          image: ${{ steps.publish-chart.outputs.amalthea-sidecars-image}}
          args: --file=./sidecars.Dockerfile --severity-threshold=high --sarif-file-output=sc.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Upload Snyk report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sc.sarif
          category: snyk_sidecars
