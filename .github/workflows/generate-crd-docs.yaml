name: Autogenerate the manifests and documentation for the CRD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-crd-docs:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Render chart into manifests
        run: |
          python -m pip install --upgrade pip pipenv
          pipenv install --dev
          cd helm-chart/
          helm dep update ./amalthea
          pipenv run chartpress --reset
          cd ../
          pipenv run python utils/render-chart-manifests.py
      - name: Generate CRD documentation
        uses: SwissDataScienceCenter/renku-actions/generate-crd-docs@3d6f5abf79b61d969b0d958e42dabb4e9f15392c
        env:
          RESOURCES: ./manifests/crd.yaml
          OUTPUT: ./docs/crd.md
      - name: Create pull request
        uses: peter-evans/create-pull-request@v3
        env:
          GITHUB_TOKEN: ${{ secrets.RENKUBOT_GITHUB_TOKEN }}
        with:
          commit-message: "chore: update rendered manifests and CRD docs"
          delete-branch: true
          title: Update rendered manifests and CRD docs
          author: "Renku Bot <renku@datascience.ch>"
          committer: "Renku Bot <renku@datascience.ch>"
          branch: renkubot/update-manifests-docs-
          branch-suffix: timestamp
  push-image:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Push the image for the current commit
        env:
          DOCKER_USERNAME: ${{ secrets.RENKU_DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.RENKU_DOCKER_PASSWORD }}
        run: |
          echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
          python -m pip install --upgrade pip pipenv
          pipenv install --dev
          cd helm-chart/
          pipenv run chartpress --tag $(git rev-parse HEAD) --push
          pipenv run chartpress --tag latest --push
